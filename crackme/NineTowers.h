#pragma once
#include <string>
#include <memory>
#include <vector>
#include <windows.h>
#include <atlbase.h>
#include <atltypes.h>
#include <list>
#include "Player.h"
using namespace std;

//typedef struct _Path {
//	CPoint pt_fr;  // 起点
//	CPoint pt_to;  // 终点
//	bool operator ==(_Path& oth)
//	{
//		return (pt_fr == oth.pt_fr && pt_to == oth.pt_to);
//	}
//}Path, *pPath;


// 作者:不问年少
// 日期:2017-7-15
// 类名：CNineTowers
// 说明：九层妖塔游戏正式处理类（前面的一切只是一个通往此游戏的Key！)
// 只有站在无妖之地，才不会受到攻击，否则会损害生命值。损害的程度与层数相关，
// 层数越高，妖怪攻击力越强大。
class CNineTowers
{
public:
	CNineTowers(list<Path>& lstPath);
	~CNineTowers();

	void CNineTowers::InitGame(string strInput);

	//void FillPath();
	bool Play(string strInput, size_t szInitGame, size_t szWalk, size_t szIsGetThrough);

private:
	friend class CPlayer;
	string m_strLeft;			// 附加的左端数据
	string m_strRight;			// 附加的右端数据
	shared_ptr<char> m_pPlay;	// 经编码后的输入数据

	int m_nCurLayer = 0;		// 当前所在层
	byte m_xchg[128] =			// 顺序交换表
	{ 
		0x45, 0x0C, 0x06, 0x2C, 0x58, 0x7E, 0x1D, 0x3E, 0x1E, 0x65, 0x0E, 0x5E, 0x07, 0x35, 0x42, 0x60, 
		0x21, 0x27, 0x67, 0x63, 0x5C, 0x31, 0x3C, 0x7D, 0x69, 0x19, 0x41, 0x44, 0x77, 0x50, 0x17, 0x4F, 
		0x47, 0x6A, 0x2E, 0x02, 0x0A, 0x11, 0x7B, 0x01, 0x2F, 0x51, 0x04, 0x6B, 0x08, 0x6D, 0x71, 0x38, 
		0x33, 0x29, 0x46, 0x7C, 0x74, 0x37, 0x5D, 0x6C, 0x5F, 0x03, 0x05, 0x0B, 0x57, 0x00, 0x1F, 0x23, 
		0x10, 0x68, 0x36, 0x66, 0x4C, 0x14, 0x15, 0x52, 0x1A, 0x3F, 0x7F, 0x12, 0x40, 0x5B, 0x78, 0x48, 
		0x22, 0x4A, 0x70, 0x55, 0x16, 0x0F, 0x2A, 0x59, 0x56, 0x13, 0x18, 0x4E, 0x6F, 0x26, 0x64, 0x3D, 
		0x4D, 0x09, 0x2B, 0x20, 0x73, 0x32, 0x62, 0x53, 0x24, 0x34, 0x28, 0x75, 0x2D, 0x39, 0x7A, 0x4B, 
		0x30, 0x3A, 0x5A, 0x6E, 0x72, 0x25, 0x61, 0x79, 0x0D, 0x54, 0x3B, 0x49, 0x76, 0x43, 0x1C, 0x1B 
	};

	DWORD m_nMap[9][9][9] =		// 九层妖塔地图
	{
		{
			0xFFFFED2B, 0x00000099, 0xFFFF8839, 0x0000256A, 0xFFFFD9A5, 0x0000754A, 0xFFFE9344, 0x00041932, 0xFFEF8B3A,
			0x00004235, 0xFFFFB049, 0x00007C93, 0xFFFF9074, 0x0000423C, 0xFFFE8E90, 0x00043EAB, 0xFFEFDD3C, 0x0040750C,
			0xFFFFAB83, 0x0000403B, 0xFFFFC2D1, 0x00007B1D, 0xFFFEDCC4, 0x00041B93, 0xFFEF8DA2, 0x00404C22, 0xFEFFC682,
			0x000024AC, 0xFFFFD92C, 0x0000061E, 0xFFFEBDE8, 0x00043D16, 0xFFEFB786, 0x00405D79, 0xFEFFE2FD, 0x040007BD,
			0xFFFFEA7E, 0x00003DA4, 0xFFFE919C, 0x00047152, 0xFFEF8D63, 0x0040005D, 0xFEFF800C, 0x04001B9A, 0xEFFFF197,
			0x0000621F, 0xFFFFF2E2, 0x00007458, 0xFFEFEE3C, 0x004007C1, 0xFEFFE9A0, 0x04004E65, 0xEFFFF186, 0x400041C4,
			0xFFFECA76, 0x00041167, 0xFFFFF9B0, 0x00001497, 0xFFFFD2A1, 0x040039A5, 0xEFFFD0D3, 0x40000EA4, 0xFFFFFCEC,
			0x00041C64, 0xFFEFC1EE, 0x00402823, 0xFEFFCB26, 0x04000DED, 0xEFFFFE01, 0x40006B45, 0xFFFFF5D1, 0x00001514,
			0xFFEFD45C, 0x00403E30, 0xFEFFE2F0, 0x04000E2B, 0xEFFFDB6C, 0x400006DE, 0xFFFFF0A2, 0x00000FBA, 0xFFFF8C64
		},
		{
			0xFFFFB7A8, 0x000019B8, 0xFFFED3FC, 0x001047BF, 0xFFFF89E8, 0x0000395E, 0xFFFFDCE7, 0x00004A1A, 0xFFFFCE32,
			0x00007D80, 0xFFFE9F6B, 0x00102B83, 0xFFFFFFAE, 0x00005F16, 0xFFFFEE2E, 0x00002391, 0xFFFFDE00, 0x000019E4,
			0xFFFE8418, 0x00103C70, 0xFEFF8486, 0x0000229B, 0xFFFFBEC2, 0x000033D1, 0xFFFF9222, 0x00007F53, 0xFFFEAF16,
			0x00101416, 0xFEFFC609, 0x10002BE7, 0xFFFFA93B, 0x00001C8A, 0xFFFFFBC0, 0x00001EF1, 0xFFFEE58C, 0x00105A1E,
			0xFEFFE0BA, 0x100049DE, 0xFFFFB6C6, 0x00005896, 0xFFFFD870, 0x00002987, 0xFFFEE997, 0x00102C46, 0xFEFFDE90,
			0x10002E14, 0xFFFFE924, 0x0000164E, 0xFFFFF6A0, 0x00006B19, 0xFFFFE7E5, 0x00105FA4, 0xFEFFB37C, 0x10007CF6,
			0xFFFFAAF9, 0x00004E33, 0xFFFFCEB1, 0x0000519F, 0xFFFFAF71, 0x00107E4B, 0xFEFFAE5C, 0x10005719, 0xFFFFE841,
			0x00005F68, 0xFFFFA611, 0x00001C73, 0xFFFEA057, 0x00103CE9, 0xFEFF967B, 0x10005803, 0xFFFFFF1C, 0x000047CD,
			0xFFFFAFF7, 0x00001B19, 0xFFFEC1A2, 0x00105F5C, 0xFEFFC7FA, 0x100061E2, 0xFFFF833D, 0x00004FC9, 0xFFFFA695
		},
		{
			0xFFFEA530, 0x01000E7F, 0xFFFFFB1C, 0x00000EFF, 0xFFFE9651, 0x01006786, 0xFFFF9DB6, 0x00003149, 0xFFFEDFC6,
			0x01000E3C, 0xFFFFFE5E, 0x00004485, 0xFFFEDE63, 0x01007693, 0xFFFFAA90, 0x00000A36, 0xFFFE9A78, 0x01000830,
			0xFFFFC1BC, 0x00007EBB, 0xFFFE8C25, 0x01005250, 0xFFFFE754, 0x00001A91, 0xFFFFD9B3, 0x01007F74, 0xFFFFA552,
			0x00006C81, 0xFFFEC43F, 0x010018D8, 0xFFFF904E, 0x000038DD, 0xFFFEBCF6, 0x000073DB, 0xFFFFC6EB, 0x00003565,
			0xFFFEFDE4, 0x01000678, 0xFFFF834F, 0x000000C6, 0xFFFE940B, 0x01006FCE, 0xFFFF865E, 0x000066C6, 0xFFFF8D57,
			0x01001958, 0xFFFFC169, 0x000066FA, 0xFFFEA5DD, 0x010026EE, 0xFFFFE103, 0x000072D2, 0xFFFEC35C, 0x00001270,
			0xFFFFF0D1, 0x00001A3B, 0xFFFE9094, 0x01004D6E, 0xFFFFB5C3, 0x000079C7, 0xFFFECF2A, 0x00003298, 0xFFFF9AB9,
			0x00007BE6, 0xFFFEDE7E, 0x01007645, 0xFFFFCA54, 0x00000EA4, 0xFFFED81C, 0x01004FE7, 0xFFFFF512, 0x00000B3A,
			0xFFFE8F27, 0x0100536B, 0xFFFFA475, 0x0000455D, 0xFFFEE220, 0x01002345, 0xFFFFB134, 0x00005591, 0xFFFE94B1,
		},
		{
			0xFFFFA58A, 0x00017144, 0xFFFF80EB, 0x00011823, 0xFFFF9B82, 0x0001585E, 0xFFFFBCA5, 0x000170A9, 0xFFFFD26C,
			0x0001770C, 0xFFFFABBB, 0x0001788A, 0xFFFFE262, 0x00017218, 0xFFFFAEB9, 0x00016CF6, 0xFFFFE9A0, 0x000166CE,
			0xFFFFF215, 0x00016824, 0xFFFFD4A8, 0x0001377E, 0xFFFFC21B, 0x00017A7F, 0xFFFF8388, 0x00015D1B, 0xFFFFD82B,
			0x00011DC5, 0xFFFFEF84, 0x000105D7, 0xFFFF8F2D, 0x00014CE6, 0xFFFFD9CF, 0x00013877, 0xFFFFCC03, 0x00017858,
			0xFFFFE0D8, 0x0001679F, 0xFFFFA690, 0x00007837, 0xFFFFCF92, 0x000164B9, 0xFFFFBB0A, 0x0001450B, 0xFFFFFD33,
			0x00011194, 0xFFFF9DBD, 0x00002B25, 0xFFFFE561, 0x0000750A, 0xFFFFA2DD, 0x00013757, 0xFFFFBC01, 0x0001790F,
			0xFFFFB101, 0x00001C93, 0xFFFFCF22, 0x00006DDB, 0xFFFFDD9F, 0x00004630, 0xFFFF914D, 0x000143A2, 0xFFFFBA94,
			0x00014DD5, 0xFFFFACC8, 0x000000CA, 0xFFFFB8D5, 0x00013EB8, 0xFFFFC3F5, 0x00005824, 0xFFFFA93C, 0x00011D90,
			0xFFFFD5BD, 0x00015F77, 0xFFFFC786, 0x00014FF1, 0xFFFF9A4F, 0x00012472, 0xFFFFC9BD, 0x00017B24, 0xFFFF8E49,
		},
		{
			0xFFFFD980, 0x0000394F, 0xFFFFE18F, 0x00006654, 0xFFFFAB32, 0x0000391F, 0xFFFFA301, 0x0000276C, 0xFFFFC040,
			0x00000CD7, 0xFFFFBF0B, 0x00004960, 0xFFFF9384, 0x0000487B, 0xFFFFF9E3, 0x0000521A, 0xFFFFFD08, 0x000008B9,
			0xFFFF9DDF, 0x00006C72, 0xFFFFCED2, 0x000034DD, 0xFFFFBF3D, 0x000059FE, 0xFFFFFAC4, 0x00003D31, 0xFFFFF7CD,
			0x00004FA0, 0xFFFFEEF1, 0x00002613, 0xFFFFB675, 0x00005154, 0xFFFFB14C, 0x000004F1, 0xFFFFE76B, 0x00005C72,
			0xFFFF92B5, 0x00002379, 0xFFFFC746, 0x00002C64, 0xFFFFC507, 0x0000329F, 0xFFFF9260, 0x00001BD4, 0xFFFF9629,
			0x000049AD, 0xFFFFC3D4, 0x0000331E, 0xFFFF9659, 0x000064D1, 0xFFFFD2D3, 0x000018D6, 0xFFFFF3F2, 0x00000AE3,
			0xFFFFDE9B, 0x00002F14, 0xFFFFF568, 0x0000319E, 0xFFFFF97B, 0x00001A0A, 0xFFFFDC81, 0x00003A53, 0xFFFFDB52,
			0x0000048E, 0xFFFFE09F, 0x00006B33, 0xFFFFC152, 0x00001381, 0xFFFFE133, 0x00006C83, 0xFFFFC8DA, 0x00004654,
			0xFFFFE977, 0x000004CF, 0xFFFFC30D, 0x00000845, 0xFFFF8CF6, 0x000052C3, 0xFFFFEDFC, 0x00000094, 0xFFFFA56A
		},
		{
			0xFFFF928F, 0x00001EEC, 0xFFFFF548, 0x00001D9F, 0xFFFF8101, 0x0000219A, 0xFFFFFEF4, 0x00005C51, 0xFFFFDBAD,
			0x0000174C, 0xFFFFBB9A, 0x00007F73, 0xFFFFDB71, 0x00005A62, 0xFFFFDDFA, 0x0000478D, 0xFFFFD80F, 0x00000E08,
			0xFFFFBBC6, 0x000018B5, 0xFFFFDDA9, 0x00001418, 0xFFFFA141, 0x000025F5, 0xFFFFB8FF, 0x00000EF8, 0xFFFFD818,
			0x0000556D, 0xFFFFE1A3, 0x00007BC6, 0xFFFFBE97, 0x00007657, 0xFFFF8B5C, 0x0000434A, 0xFFFF86A9, 0x000011CD,
			0xFFFFB3A5, 0x00002ED5, 0xFFFFF37E, 0x00000847, 0xFFFFF791, 0x000079D9, 0xFFFFA096, 0x000052CB, 0xFFFFE645,
			0x00003017, 0xFFFF9E78, 0x0000333C, 0xFFFF9238, 0x00000897, 0xFFFF89C6, 0x00000C7C, 0xFFFFCA49, 0x00003852,
			0xFFFFC33A, 0x00001A4A, 0xFFFFC85E, 0x00005C86, 0xFFFFE8CF, 0x0000641D, 0xFFFFC29A, 0x00006223, 0xFFFFF633,
			0x0000449B, 0xFFFFB51F, 0x00005D05, 0xFFFFE88F, 0x00003BEB, 0xFFFFE0FA, 0x00007719, 0xFFFFC412, 0x00006E9F,
			0xFFFFC2B2, 0x0000232A, 0xFFFFAB4B, 0x000043DD, 0xFFFFC595, 0x000048CE, 0xFFFFE2E4, 0x00002E3B, 0xFFFFE155
		},
		{
			0xFFFFAFBD, 0x00006936, 0xFFFFD2CA, 0x00000079, 0xFFFFC695, 0x0000714C, 0xFFFFF950, 0x0000632F, 0xFFFFDB25,
			0x0000445E, 0xFFFF9814, 0x00001149, 0xFFFFB823, 0x00003ED8, 0xFFFFF54E, 0x00000AB9, 0xFFFFC4ED, 0x0000018E,
			0xFFFFB9E1, 0x00003C5F, 0xFFFF9213, 0x00007A6A, 0xFFFFE632, 0x00006333, 0xFFFFBF31, 0x00003D3A, 0xFFFFB67B,
			0x00000B57, 0xFFFFF92A, 0x0000215C, 0xFFFFEAE3, 0x00006DBD, 0xFFFF962E, 0x00002932, 0xFFFFD0E9, 0x00000D93,
			0xFFFFD58E, 0x00006140, 0xFFFF9541, 0x0000458B, 0xFFFFF429, 0x00006486, 0xFFFFFF00, 0x0000535B, 0xFFFFF5BD,
			0x00005E12, 0xFFFFB6B2, 0x000038EB, 0xFFFF9752, 0x00003468, 0xFFFFFF5D, 0x00007EF5, 0xFFFFD72E, 0x00006D4E,
			0xFFFFCBF9, 0x00004DBD, 0xFFFFED4C, 0x00002002, 0xFFFF8700, 0x00005612, 0xFFFFE737, 0x00005B2E, 0xFFFFA4FB,
			0x00006455, 0xFFFF8712, 0x00005BB8, 0xFFFFD38C, 0x000023CA, 0xFFFFD646, 0x00000F87, 0xFFFF96DE, 0x0000227D,
			0xFFFFAF79, 0x00003802, 0xFFFFAD1A, 0x0000727F, 0xFFFFD053, 0x000056C0, 0xFFFF8EF6, 0x00007409, 0xFFFFCD75
		},
		{
			0xFFFFF2EE, 0x000003B1, 0xFFFF8E08, 0x00003325, 0xFFFFA7DB, 0x0000423F, 0xFFFFD845, 0x0000507C, 0xFFFFD1B8,
			0x0000691B, 0xFFFFBF41, 0x00006947, 0xFFFFD3D1, 0x0000533C, 0xFFFFEB13, 0x000016F8, 0xFFFFF466, 0x00001249,
			0xFFFFE543, 0x00001144, 0xFFFF91FC, 0x00002373, 0xFFFFFF7B, 0x00001AB0, 0xFFFF9C29, 0x00006AAD, 0xFFFFF76C,
			0x00005420, 0xFFFFA9B0, 0x000002C6, 0xFFFF83B8, 0x00001145, 0xFFFFC32D, 0x000033F3, 0xFFFFE4B7, 0x00000C22,
			0xFFFFFF89, 0x0000616E, 0xFFFFDC37, 0x000051B1, 0xFFFFF1A7, 0x00005229, 0xFFFFB9E6, 0x00006108, 0xFFFF9001,
			0x00007D20, 0xFFFF840A, 0x0000355F, 0xFFFFF974, 0x00006887, 0xFFFFD370, 0x000010C2, 0xFFFFE3ED, 0x00007AF1,
			0xFFFFF311, 0x000027EB, 0xFFFFA8C1, 0x00002933, 0xFFFFC2A8, 0x0000326C, 0xFFFFB847, 0x0000469B, 0xFFFFB592,
			0x00006744, 0xFFFFCC03, 0x00007210, 0xFFFF8332, 0x0000220C, 0xFFFFD878, 0x00007B89, 0xFFFFDD1D, 0x0000210E,
			0xFFFFE378, 0x00007A27, 0xFFFFBBF1, 0x00001B6E, 0xFFFFEB9C, 0x00004011, 0xFFFFCFBE, 0x000001AA, 0xFFFFBD4D
		},
		{
			0xFFFFAC34, 0x00007017, 0xFFFFE65F, 0x000071E8, 0xFFFFD4A0, 0x00000BCF, 0xFFFF8A6F, 0x00005926, 0xFFFFF569,
			0x00000B2F, 0xFFFF8E8D, 0x00000BBE, 0xFFFFF402, 0x0000472F, 0xFFFFB88B, 0x00006D3E, 0xFFFFBABD, 0x00000F6D,
			0xFFFFBA7E, 0x00005DC6, 0xFFFFE083, 0x00003739, 0xFFFF8CFE, 0x00000E3A, 0xFFFFB866, 0x000031B9, 0xFFFF8F62,
			0x00006D88, 0xFFFFB443, 0x0000309D, 0xFFFFA4C1, 0x00004398, 0xFFFFCD31, 0x0000410C, 0xFFFFEDAD, 0x00002892,
			0xFFFFCCAA, 0x00006FA7, 0xFFFF88F0, 0x00007D6A, 0xFFFFD569, 0x000069E2, 0xFFFFD190, 0x00004714, 0xFFFFBFB7,
			0x00000A25, 0xFFFFA1BA, 0x00007E15, 0xFFFFD5E5, 0x0000607B, 0xFFFFEC63, 0x00005071, 0xFFFFD7C6, 0x00004094,
			0xFFFF8940, 0x00003D52, 0xFFFFC47E, 0x00006B30, 0xFFFFCA17, 0x00001018, 0xFFFFB6C8, 0x00006F95, 0xFFFFD926,
			0x00001394, 0xFFFF8F80, 0x0000246B, 0xFFFFC4B3, 0x00004BC1, 0xFFFFC79C, 0x00005584, 0xFFFFE50A, 0x000061E7,
			0xFFFFD822, 0x00000613, 0xFFFFEE3E, 0x00007254, 0xFFFFA45E, 0x00002C5C, 0xFFFFC423, 0x0000733C, 0xFFFFD53B
		}
	};		// 9层妖塔地图
	
	double m_fAttackLevel[9] =
	{
		3.5,
		5.0,
		5.7,
		6.8,
		8.3,
		10.6,
		13.1,
		17.4,
		19.6
	};
	
	// 玩家对象
	CPlayer m_cPlayer;	
	// 运动轨迹点
	list<Path>& m_lstPath;
};


